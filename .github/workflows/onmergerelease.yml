name: OnMergeRelease

on:
  push:
    branches:
      - 'main'
      - 'release/*'
    tags:
      - '**'

jobs:
  build-test-scan:
    runs-on: [ self-hosted ]
    env:
      http_proxy: ${{ secrets.HTTP_PROXY }}
      https_proxy: ${{ secrets.HTTPS_PROXY }}
      no_proxy: ${{ secrets.NO_PROXY }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Unit Test
        run: |
          make test
          if [ $? -ne 0 ]; then
            exit 1
          fi

      - name: Unit Test Coverage
        run: |
          make test-coverage
          COVERAGE=$(make test-coverage | grep 'total' | awk '{print $3}' | awk -F. '{print $1}')
          echo "Unit test coverage is - $COVERAGE%"
          if [[ $COVERAGE -lt 80 ]]; then
            echo "Unit test coverage must be above 80% "
            exit 1
          fi

      - name: Build Image
        run: make

      - name: Style Checker
        run: |
          make go-fmt
          if [ "$(make go-fmt | tail -n 1 | grep gofmt | wc -l)"  -eq 0 ]; then
             exit 1
          fi

  checkmarx:
    runs-on: [ self-hosted, taas ]
    environment: Pull_Request_Environment
    steps:
      - uses: actions/checkout@v3
      - name: Scan
        uses: intel-innersource/frameworks.devops.github.actions.checkmarx@main
        with:
          username: ${{ secrets.CHECKMARX_USERNAME }}
          password: ${{ secrets.CHECKMARX_PASSWORD }}
          project: Key Broker Service
          team: /CxServer/SP/Intel/IntelProjects/IAP/36221

  docker-push:
    runs-on: [ self-hosted ]
    needs: [ "checkmarx" ]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Build Image
        run: make

      - name: Docker Login
        uses: docker/login-action@v2
        with:
          registry: amr-registry.caas.intel.com
          username: ${{ secrets.HARBOR_USERNAME  }}
          password: ${{ secrets.HARBOR_PASSWORD }}
          logout: false

      - name: Push Image
        uses: docker/login-action@v2
        with:
          registry: amr-registry.caas.intel.com
          username: ${{ secrets.HARBOR_USERNAME  }}
          password: ${{ secrets.HARBOR_PASSWORD }}
        run: |
          make REPO=amr-registry.caas.intel.com/amber push-commit

  docker-prune:
    runs-on: [ self-hosted ]
    needs: [ "docker-push" ]
    steps:
      - name: Docker prune
        run: docker system prune -f
